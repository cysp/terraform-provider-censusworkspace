openapi: "3.1.0"
info:
  title: Census Management API
  version: "0.1"
servers:
  - url: https://app.getcensus.com
components:
  parameters:
    dataset_id:
      in: path
      name: dataset_id
      required: true
      schema:
        type: string
    source_id:
      in: path
      name: source_id
      required: true
      schema:
        type: string
    destination_id:
      in: path
      name: destination_id
      required: true
      schema:
        type: string
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - updated
        - created
        - deleted
        - not_found
        - error
    CreateSourceBody:
      type: object
      properties:
        connection:
          type: object
          properties:
            type:
              type: string
              description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
            sync_engine:
              type: string
              description: The sync engine type for this source. Can only be set during creation and cannot be modified after.
            label:
              type: string
              description: An optional label that can be assigned to the source for better categorization or identification.
              nullable: true
            credentials:
              description: Credentials that should be associated with this source (e.g. hostname, port)
          required:
            - type
      required:
        - connection
    UpdateSourceBody:
      type: object
      properties:
        connection:
          type: object
          properties:
            label:
              type: string
              description: An optional label that can be assigned to the source for better categorization or identification.
              nullable: true
            credentials:
              description: Credentials that should be associated with this source (e.g. hostname, port)
      required:
        - connection
    SourceData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier of the source.
        name:
          type: string
          description: The name assigned to this source, typically a combination of type and location.
        type:
          type: string
          description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
        sync_engine:
          type: string
          description: The sync engine type for this source.
        label:
          type: string
          description: An optional label that can be assigned to the source for better categorization or identification.
          nullable: true
        connection_details: {}
        created_at:
          type: string
          format: date-time
          description: The timestamp when the source was created.
        last_test_succeeded:
          type: boolean
          description: Indicates if the last connection test to this source was successful.
          nullable: true
        last_tested_at:
          type: string
          format: date-time
          description: Timestamp of when the last connection test was conducted on this source.
          nullable: true
      required:
        - id
        - type
        - name
        - label
        - created_at
    CreateDatasetBody:
      oneOf:
        - $ref: "#/components/schemas/CreateSQLDatasetBody"
    CreateSQLDatasetBody:
      type: object
      properties:
        name:
          type: string
          description: The name of the dataset
        type:
          type: string
          description: Type of dataset
          enum:
            - sql
        source_id:
          type: integer
          format: int64
          description: ID of the source connection to run the query against
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
      required:
        - name
        - type
        - source_id
        - query
    UpdateDatasetBody:
      oneOf:
        - $ref: "#/components/schemas/UpdateSQLDatasetBody"
    UpdateSQLDatasetBody:
      type: object
      properties:
        name:
          type: string
          description: The name of the dataset
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
    DatasetData:
      oneOf:
        - $ref: "#/components/schemas/SQLDatasetData"
    SQLDatasetData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the dataset
        name:
          type: string
          description: The name of the dataset
        type:
          type: string
          enum:
            - sql
          description: Type of dataset
        source_id:
          type: integer
          format: int64
          description: ID of the source connection to run the query against
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
        created_at:
          type: string
          format: date-time
          description: Timestamp when the dataset was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the dataset was last updated
      required:
        - id
        - name
        - type
        - source_id
        - query
        - created_at
        - updated_at
    CreateDestinationBody:
      type: object
      properties:
        service_connection:
          type: object
          properties:
            type:
              type: string
              description: The type of connection to be used for this destination. A valid type is the service_name of a connector returned from the /connectors endpoint, where the connector is marked as creatable_via_api.
            name:
              type: string
              description: The name of this destination.
            credentials:
              description: The credentials needed to create each type of connection. These can be found in the GET /connectors API for most destinations.
          required:
            - type
            - name
      required:
        - service_connection
    UpdateDestinationBody:
      type: object
      properties:
        service_connection:
          type: object
          properties:
            name:
              type: string
              description: The name of this destination.
            credentials:
              description: The credentials needed to create each type of connection. These can be found in the GET /connectors API for most destinations.
      required:
        - service_connection
    DestinationData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The id of this destination.
        name:
          type: string
          description: The name of this destination.
        type:
          type: string
          description: The type of connection to be used for this destination. A valid type is the service_name of a connector returned from the /connectors endpoint, where the connector is marked as creatable_via_api.
        connection_details: {}
        created_at:
          type: string
          format: date-time
          description: The timestamp when the source was created.
        last_test_succeeded:
          type: boolean
          description: Indicates if the last connection test to this source was successful.
          nullable: true
        last_tested_at:
          type: string
          format: date-time
          description: Timestamp of when the last connection test was conducted on this source.
          nullable: true
      required:
        - id
        - name
        - type
        - created_at
  securitySchemes:
    workspaceApiKey:
      type: http
      scheme: bearer
      bearerFormat: Census Workspace API Key
  responses:
    statusResponse:
      description: Status response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                oneOf:
                  - $ref: "#/components/schemas/ResponseStatus"
                  - type: integer
              message:
                type: string
            required:
              - status
    idResponse:
      description: A resource id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                required:
                  - id
            required:
              - status
              - data
    sourceResponse:
      description: A source
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/SourceData"
            required:
              - status
              - data
    datasetResponse:
      description: A dataset
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/DatasetData"
            required:
              - status
              - data
    destinationResponse:
      description: A destination
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/DestinationData"
            required:
              - status
              - data
security:
  - workspaceApiKey: []
paths:
  /api/v1:
    get:
      operationId: getApiV1
      responses:
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/sources:
    post:
      operationId: createSource
      summary: Create Source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSourceBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/sources/{source_id}:
    parameters:
      - $ref: "#/components/parameters/source_id"
    get:
      operationId: getSource
      summary: Fetch source
      responses:
        2XX:
          $ref: "#/components/responses/sourceResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateSource
      summary: Update source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSourceBody"
      responses:
        2XX:
          $ref: "#/components/responses/sourceResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteSource
      summary: Delete source
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/datasets:
    post:
      operationId: createDataset
      summary: Create dataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/datasets/{dataset_id}:
    parameters:
      - $ref: "#/components/parameters/dataset_id"
    get:
      operationId: getDataset
      summary: Fetch dataset
      responses:
        2XX:
          $ref: "#/components/responses/datasetResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateDataset
      summary: Update dataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetBody"
      responses:
        2XX:
          $ref: "#/components/responses/datasetResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteDataset
      summary: Delete dataset
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/destinations:
    post:
      operationId: createDestination
      summary: Create Destination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDestinationBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/destinations/{destination_id}:
    parameters:
      - $ref: "#/components/parameters/destination_id"
    get:
      operationId: getDestination
      summary: Fetch destination
      responses:
        2XX:
          $ref: "#/components/responses/destinationResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateDestination
      summary: Update destination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDestinationBody"
      responses:
        2XX:
          $ref: "#/components/responses/destinationResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteDestination
      summary: Delete destination
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
