openapi: "3.1.0"
info:
  title: Census Management API
  version: "0.1"
servers:
  - url: https://app.getcensus.com
components:
  parameters:
    dataset_id:
      in: path
      name: dataset_id
      required: true
      schema:
        type: string
    source_id:
      in: path
      name: source_id
      required: true
      schema:
        type: string
    destination_id:
      in: path
      name: destination_id
      required: true
      schema:
        type: string
    sync_id:
      in: path
      name: sync_id
      required: true
      schema:
        type: string
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - updated
        - created
        - deleted
        - not_found
        - error
    CreateSourceBody:
      type: object
      properties:
        connection:
          type: object
          properties:
            type:
              type: string
              description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
            sync_engine:
              type: string
              description: The sync engine type for this source. Can only be set during creation and cannot be modified after.
            label:
              type: string
              description: An optional label that can be assigned to the source for better categorization or identification.
              nullable: true
            credentials:
              description: Credentials that should be associated with this source (e.g. hostname, port)
          required:
            - type
      required:
        - connection
    UpdateSourceBody:
      type: object
      properties:
        connection:
          type: object
          properties:
            label:
              type: string
              description: An optional label that can be assigned to the source for better categorization or identification.
              nullable: true
            credentials:
              description: Credentials that should be associated with this source (e.g. hostname, port)
      required:
        - connection
    SourceData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier of the source.
        name:
          type: string
          description: The name assigned to this source, typically a combination of type and location.
        type:
          type: string
          description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
        sync_engine:
          type: string
          description: The sync engine type for this source.
        label:
          type: string
          description: An optional label that can be assigned to the source for better categorization or identification.
          nullable: true
        connection_details: {}
        created_at:
          type: string
          format: date-time
          description: The timestamp when the source was created.
        last_test_succeeded:
          type: boolean
          description: Indicates if the last connection test to this source was successful.
          nullable: true
        last_tested_at:
          type: string
          format: date-time
          description: Timestamp of when the last connection test was conducted on this source.
          nullable: true
      required:
        - id
        - type
        - name
        - label
        - created_at
    CreateDatasetBody:
      anyOf:
        - $ref: "#/components/schemas/CreateSQLDatasetBody"
    CreateSQLDatasetBody:
      type: object
      properties:
        name:
          type: string
          description: The name of the dataset
        type:
          type: string
          description: Type of dataset
          enum:
            - sql
        source_id:
          type: integer
          format: int64
          description: ID of the source connection to run the query against
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
          nullable: true
      required:
        - name
        - type
        - source_id
        - query
    UpdateDatasetBody:
      anyOf:
        - $ref: "#/components/schemas/UpdateSQLDatasetBody"
    UpdateSQLDatasetBody:
      type: object
      properties:
        name:
          type: string
          description: The name of the dataset
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
          nullable: true
    DatasetData:
      anyOf:
        - $ref: "#/components/schemas/SQLDatasetData"
    SQLDatasetData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the dataset
        name:
          type: string
          description: The name of the dataset
        type:
          type: string
          enum:
            - sql
          description: Type of dataset
        source_id:
          type: integer
          format: int64
          description: ID of the source connection to run the query against
        query:
          type: string
          description: SQL query that defines the dataset
        description:
          type: string
          description: Optional description of the dataset
          nullable: true
        created_at:
          type: string
          format: date-time
          description: Timestamp when the dataset was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the dataset was last updated
      required:
        - id
        - name
        - type
        - source_id
        - query
        - created_at
        - updated_at
    CreateDestinationBody:
      type: object
      properties:
        service_connection:
          type: object
          properties:
            type:
              type: string
              description: The type of connection to be used for this destination. A valid type is the service_name of a connector returned from the /connectors endpoint, where the connector is marked as creatable_via_api.
            name:
              type: string
              description: The name of this destination.
            credentials:
              description: The credentials needed to create each type of connection. These can be found in the GET /connectors API for most destinations.
          required:
            - type
            - name
      required:
        - service_connection
    UpdateDestinationBody:
      type: object
      properties:
        service_connection:
          type: object
          properties:
            name:
              type: string
              description: The name of this destination.
            credentials:
              description: The credentials needed to create each type of connection. These can be found in the GET /connectors API for most destinations.
      required:
        - service_connection
    DestinationData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The id of this destination.
        name:
          type: string
          description: The name of this destination.
        type:
          type: string
          description: The type of connection to be used for this destination. A valid type is the service_name of a connector returned from the /connectors endpoint, where the connector is marked as creatable_via_api.
        connection_details: {}
        created_at:
          type: string
          format: date-time
          description: The timestamp when the source was created.
        last_test_succeeded:
          type: boolean
          description: Indicates if the last connection test to this source was successful.
          nullable: true
        last_tested_at:
          type: string
          format: date-time
          description: Timestamp of when the last connection test was conducted on this source.
          nullable: true
      required:
        - id
        - name
        - type
        - created_at

    CreateOrUpdateSyncBody:
      type: object
      properties:
        label:
          type: string
          description: A label to give to this sync.
          nullable: true
        operation:
          type: string
          description: How records are synced to the destination.
          # enum:
          #   - append
          #   - insert
          #   - mirror
          #   - update
          #   - upsert
        destination_attributes:
          $ref: '#/components/schemas/SyncDestinationAttributes'
        source_attributes:
          $ref: '#/components/schemas/SyncSourceAttributes'
        mappings:
          type: array
          description: Array of mapping objects defining how source fields map to destination fields.
          items:
            $ref: '#/components/schemas/SyncMapping'
        alert_attributes:
          type: array
          description: Array of alert configuration objects determining when and how to send alerts.
          items:
            $ref: '#/components/schemas/SyncAlertAttributes'
        advanced_configuration:
          $ref: '#/components/schemas/SyncAdvancedConfiguration'
        mode:
          $ref: '#/components/schemas/SyncMode'
        paused:
          type: boolean
          description: Whether or not this sync should be paused.
        field_behavior:
          type: string
          description: How destination fields are updated.
        field_normalization:
          type: string
          description: If field_behavior is 'sync_all_properties', how automatic mappings should be named.
        field_order:
          type: string
          description: How the destination fields should be ordered.
        sync_behavior_family:
          type: string
          description: Behavior family for the sync.
        high_water_mark_attribute:
          type: string
          description: Name of the timestamp column for high-water-mark diffing strategy.
        high_water_mark_attributes:
          $ref: '#/components/schemas/SyncHighWaterMarkAttributes'
        validate_only:
          type: boolean
          description: When true, checks if the given payload is valid to configure a sync. Does not create the sync.
        failed_run_notifications_enabled:
          type: boolean
          description: "Deprecated flag: when true, will email on sync failures and recoveries."
        failed_record_notifications_enabled:
          type: boolean
          description: "Deprecated flag: when true, will email on invalid/rejected record thresholds."
        failed_record_notifications_threshold_percent:
          type: integer
          description: "Deprecated: threshold percent of invalid/rejected records to trigger notification."
        historical_sync_operation:
          type: string
          description: How the first sync should handle historical records for append operations.
        mirror_strategy:
          type: string
          description: Strategy for mirror syncs.
      required:
        - operation
        - destination_attributes
        - source_attributes
        - mappings

    SyncData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the sync.
        status:
          type: string
          description: Status of the sync (e.g., ready).
        created_at:
          type: string
          format: date-time
          description: Timestamp when the sync was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the sync was last updated.
        label:
          type: string
          description: A label to give to this sync.
          nullable: true
        operation:
          type: string
          description: How records are synced to the destination.
        destination_attributes:
          $ref: '#/components/schemas/SyncDestinationAttributes'
        source_attributes:
          $ref: '#/components/schemas/SyncSourceAttributes'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SyncMapping'
        alert_attributes:
          type: array
          items:
            $ref: '#/components/schemas/SyncAlertAttributes'
        advanced_configuration:
          $ref: '#/components/schemas/SyncAdvancedConfiguration'
        mode:
          $ref: '#/components/schemas/SyncMode'
        paused:
          type: boolean
          description: Whether or not this sync should be paused.
        field_behavior:
          type: string
          description: How destination fields are updated.
        field_normalization:
          type: string
          description: If field_behavior is 'sync_all_properties', how automatic mappings should be named.
        field_order:
          type: string
          description: How the destination fields should be ordered.
        sync_behavior_family:
          type: string
          description: Behavior family for the sync.
        high_water_mark_attribute:
          type: string
          description: Name of the timestamp column for high-water-mark diffing strategy.
        high_water_mark_attributes:
          $ref: '#/components/schemas/SyncHighWaterMarkAttributes'
        validate_only:
          type: boolean
          description: When true, checks if the given payload is valid to configure a sync. Does not create the sync.
        failed_run_notifications_enabled:
          type: boolean
          description: "Deprecated flag: when true, will email on sync failures and recoveries."
        failed_record_notifications_enabled:
          type: boolean
          description: "Deprecated flag: when true, will email on invalid/rejected record thresholds."
        failed_record_notifications_threshold_percent:
          type: integer
          description: "Deprecated: threshold percent of invalid/rejected records to trigger notification."
        historical_sync_operation:
          type: string
          description: How the first sync should handle historical records for append operations.
        mirror_strategy:
          type: string
          description: Strategy for mirror syncs.
        match_rate_details:
          $ref: '#/components/schemas/SyncMatchRateDetails'
      required:
        - id
        - status
        - created_at
        - updated_at
        - operation
        - destination_attributes
        - source_attributes
        - mappings

    SyncDestinationAttributes:
      type: object
      properties:
        connection_id:
          type: integer
          description: ID of the destination connection.
        object:
          type: string
          description: Destination object (table, entity) to sync into.
      required:
        - connection_id
        - object

    SyncSourceAttributes:
      type: object
      properties:
        connection_id:
          type: integer
          description: ID of the source connection.
        object:
          $ref: '#/components/schemas/SyncSourceObject'
      required:
        - connection_id
        - object

    SyncSourceObject:
      type: object
      properties:
        type:
          type: string
          description: Source object type (dataset, table, etc.)
        id:
          type: integer
          description: ID of the dataset source.
        table_catalog:
          type: string
          description: Catalog name for the table in the warehouse.
        table_schema:
          type: string
          description: Schema name for the table in the warehouse.
        table_name:
          type: string
          description: Table name in the warehouse schema.

    SyncMapping:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/SyncMappingFrom'
        to:
          type: string
          description: Destination field or property name.
        is_primary_identifier:
          type: boolean
          description: Whether this mapping is used as the primary identifier.
        lookup_object:
          type: string
          description: Destination lookup object name if using a lookup.
        lookup_field:
          type: string
          description: Field to look up on the destination object if using a lookup.
      required:
        - from
        - to

    SyncMappingFrom:
      type: object
      properties:
        type:
          type: string
          description: Type of source data reference (column, constant_value, etc.)
        data:
          description: Data or value used from the source side (column name or constant value object).
      required:
        - type
        - data

    SyncAlertAttributes:
      type: object
      properties:
        type:
          type: string
          description: Type of alert configuration.
        send_for:
          type: string
          description: When to send the alert (first_time, every_time, etc.)
        should_send_recovery:
          type: boolean
          description: Whether to send a recovery notification when issue is resolved.
        options:
          description: Additional options specific to the alert type.

    SyncAdvancedConfiguration:
      type: object
      properties:
        data_source_country:
          type: string
          description: Country or countries of the data source (e.g., 'US, GB').
        bulk_id_lookup:
          type: boolean
          description: Whether to use bulk ID lookup optimization.

    SyncMode:
      type: object
      properties:
        type:
          type: string
          description: SyncMode type (e.g., triggered).
        triggers:
          $ref: '#/components/schemas/SyncTriggers'

    SyncTriggers:
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/SyncSchedule'

    SyncSchedule:
      type: object
      properties:
        frequency:
          type: string
          description: Run frequency (e.g., daily)
        hour:
          type: integer
          description: Hour of day when the sync runs (24‑hour clock)
        minute:
          type: integer
          description: Minute of hour when the sync runs

    SyncHighWaterMarkAttributes:
      type: object
      properties:
        use_high_water_mark_diff_type:
          type: boolean
          description: Whether to use the high water mark diff type.
        column_name:
          type: string
          description: Name of the timestamp column used for high water mark diffing.
    SyncMatchRateDetails:
      type: object
      properties:
        match_rate:
          type: number
          description: Overall match rate for the sync.
        match_rate_last_calculated_at:
          type: string
          format: date-time
          description: Timestamp when match rate was last calculated.
  securitySchemes:
    workspaceApiKey:
      type: http
      scheme: bearer
      bearerFormat: Census Workspace API Key
  responses:
    statusResponse:
      description: Status response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                oneOf:
                  - $ref: "#/components/schemas/ResponseStatus"
                  - type: integer
              message:
                type: string
            required:
              - status
    idResponse:
      description: A resource id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                required:
                  - id
            required:
              - status
              - data
    sourceResponse:
      description: A source
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/SourceData"
            required:
              - status
              - data
    datasetResponse:
      description: A dataset
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/DatasetData"
            required:
              - status
              - data
    destinationResponse:
      description: A destination
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/DestinationData"
            required:
              - status
              - data
    syncIdResponse:
      description: A sync id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                type: object
                properties:
                  sync_id:
                    type: integer
                    format: int64
                required:
                  - sync_id
            required:
              - status
              - data
    syncResponse:
      description: A sync
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
              data:
                $ref: "#/components/schemas/SyncData"
            required:
              - status
              - data
security:
  - workspaceApiKey: []
paths:
  /api/v1:
    get:
      operationId: getApiV1
      responses:
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/sources:
    post:
      operationId: createSource
      summary: Create Source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSourceBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/sources/{source_id}:
    parameters:
      - $ref: "#/components/parameters/source_id"
    get:
      operationId: getSource
      summary: Fetch source
      responses:
        2XX:
          $ref: "#/components/responses/sourceResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateSource
      summary: Update source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSourceBody"
      responses:
        2XX:
          $ref: "#/components/responses/sourceResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteSource
      summary: Delete source
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/datasets:
    post:
      operationId: createDataset
      summary: Create dataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/datasets/{dataset_id}:
    parameters:
      - $ref: "#/components/parameters/dataset_id"
    get:
      operationId: getDataset
      summary: Fetch dataset
      responses:
        2XX:
          $ref: "#/components/responses/datasetResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateDataset
      summary: Update dataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetBody"
      responses:
        2XX:
          $ref: "#/components/responses/datasetResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteDataset
      summary: Delete dataset
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/destinations:
    post:
      operationId: createDestination
      summary: Create Destination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDestinationBody"
      responses:
        2XX:
          $ref: "#/components/responses/idResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/destinations/{destination_id}:
    parameters:
      - $ref: "#/components/parameters/destination_id"
    get:
      operationId: getDestination
      summary: Fetch destination
      responses:
        2XX:
          $ref: "#/components/responses/destinationResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateDestination
      summary: Update destination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDestinationBody"
      responses:
        2XX:
          $ref: "#/components/responses/destinationResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteDestination
      summary: Delete destination
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/syncs:
    post:
      operationId: createSync
      summary: Create Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateSyncBody"
      responses:
        2XX:
          $ref: "#/components/responses/syncIdResponse"
        default:
          $ref: "#/components/responses/statusResponse"
  /api/v1/syncs/{sync_id}:
    parameters:
      - $ref: "#/components/parameters/sync_id"
    get:
      operationId: getSync
      summary: Fetch sync
      responses:
        2XX:
          $ref: "#/components/responses/syncResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    patch:
      operationId: updateSync
      summary: Update sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateSyncBody"
      responses:
        2XX:
          $ref: "#/components/responses/syncResponse"
        default:
          $ref: "#/components/responses/statusResponse"
    delete:
      operationId: deleteSync
      summary: Delete sync
      responses:
        2XX:
          $ref: "#/components/responses/statusResponse"
        default:
          $ref: "#/components/responses/statusResponse"
