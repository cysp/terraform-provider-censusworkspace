openapi: "3.0.3"
info:
  title: Census Management API
  version: "0.1"
servers:
  - url: https://app.getcensus.com
components:
  parameters:
    source_id:
      in: path
      name: source_id
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - updated
        - created
        - not_found
        - error
    CreateSourceData:
      type: object
      properties:
        type:
          type: string
          description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
        label:
          type: string
          description: An optional label that can be assigned to the source for better categorization or identification.
          nullable: true
        credentials:
          description: Credentials that should be associated with this source (e.g. hostname, port)
      required:
        - type
        - label
    UpdateSourceData:
      type: object
      properties:
        label:
          type: string
          description: An optional label that can be assigned to the source for better categorization or identification.
          nullable: true
        credentials:
          description: Credentials that should be associated with this source (e.g. hostname, port)
          # additionalProperties: true
      required:
        - label
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier of the source.
        name:
          type: string
          description: The name assigned to this source, typically a combination of type and location.
        label:
          type: string
          description: An optional label that can be assigned to the source for better categorization or identification.
          nullable: true
        type:
          type: string
          description: The type of the data source. A valid type is the service_name of a source type returned from the /source_types endpoint, where the source type is marked as creatable_via_api.
        created_at:
          type: string
          format: date-time
          description: The timestamp when the source was created.
        last_test_succeeded:
          type: boolean
          description: Indicates if the last connection test to this source was successful.
          nullable: true
        last_tested_at:
          type: string
          format: date-time
          description: Timestamp of when the last connection test was conducted on this source.
          nullable: true
        connection_details: {}
      required:
        - id
        - name
        - type
        - created_at
  securitySchemes:
    workspaceApiKey:
      type: http
      scheme: bearer
      bearerFormat: Census Workspace API Key
  responses:
    status:
      description: Status response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/ResponseStatus"
  #   no-content:
  #     description: No content
  # unauthorized:
  #   description: Unauthorized
  # content:
  #   application/json:
  #         schema:
  #           $ref: "#/components/schemas/Error"
  #       application/vnd.contentful.management.v1+json:
  #         schema:
  #           $ref: "#/components/schemas/Error"
  # error:
  #   description: An error
  #     content:
  #       application/json:
  #         schema:
  #           $ref: "#/components/schemas/Error"
  #       application/vnd.contentful.management.v1+json:
  #         schema:
  #           $ref: "#/components/schemas/Error"
security:
  - workspaceApiKey: []
paths:
  /api/v1/sources:
    post:
      operationId: createSource
      summary: Create Source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSourceData"
      responses:
        2XX:
          description: A source
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/ResponseStatus"
                  data:
                    $ref: "#/components/schemas/Source"
        # 401:
        #   $ref: "#/components/responses/unauthorized"
        # default:
        #   $ref: "#/components/responses/error"
  /api/v1/sources/{source_id}:
    parameters:
      - $ref: "#/components/parameters/source_id"
    get:
      operationId: getSource
      summary: Fetch source
      responses:
        200:
          description: A source
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/ResponseStatus"
                  data:
                    $ref: "#/components/schemas/Source"
        # 401:
        #   $ref: "#/components/responses/unauthorized"
        # default:
        #   $ref: "#/components/responses/error"
    put:
      operationId: updateSource
      summary: Update source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSourceData"
      responses:
        2XX:
          description: A source
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/ResponseStatus"
                  data:
                    $ref: "#/components/schemas/Source"
        # 401:
        #   $ref: "#/components/responses/unauthorized"
        # default:
        #   $ref: "#/components/responses/error"
    delete:
      operationId: deleteSource
      summary: Delete source
      responses:
        2XX:
          $ref: "#/components/responses/status"
        # 401:
        #   $ref: "#/components/responses/unauthorized"
        # default:
        #   $ref: "#/components/responses/error"
